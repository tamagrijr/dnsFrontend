{"version":3,"sources":["config/config.js","store/loginInformaiton.js","store/authentication.js","components/splash/Splash.js","components/splash/SplashContainer.js","store/currentChat.js","components/input/Input.js","store/create.js","socketContext.js","components/input/InputContainer.js","components/message/Message.js","components/message/MessageContainer.js","components/chat/Chat.js","components/chat/ChatContainer.js","components/FriendMenu/FriendMenu.js","components/members/Members.js","components/pinned/Pinned.js","components/home/HomePage.js","components/home/HomePageContainer.js","components/ProtectedRoute.js","components/profile/Profile.js","components/profile/ProfileContainer.js","store/joinedChannels.js","App.js","store/configureStore.js","theme.js","index.js"],"names":["baseUrl","REMOVE_TOKEN","LOGIN_INFO","UPDATE_USER","DELETE_USER","loadInformation","userInfo","type","token","dispatch","a","fetch","method","headers","Authorization","response","ok","json","TOKEN_KEY","SET_TOKEN","setToken","useStyles","makeStyles","theme","root","margin","spacing","Splash","classes","React","useState","open","setOpen","signUpOpen","setSignUpOpen","email","setEmail","password","setPassword","signUpEmail","setSignUpEmail","signUpPassword","setSignUpPassword","firstName","setFirstName","lastName","setLastName","confirmPassword","setConfirmPassword","useSelector","state","authentication","useDispatch","handleSubmit","e","preventDefault","body","JSON","stringify","window","localStorage","setItem","login","handleSignUpSubmit","user","res","updateProperty","callback","target","value","to","handleClose","Box","className","onClick","Dialog","onClose","aria-labelledby","onSubmit","PaperProps","style","backgroundColor","alignItems","width","heigth","DialogTitle","id","DialogContent","dividers","TextField","error","label","onChange","color","DialogActions","dialogAct","Button","disabled","SplashContainer","CURRENT_CHAT","CLEAR_CHAT","ADD_MESSAGE","loadChat","chatInfo","chat","returnMembers","clearChat","addMessage","newMessage","chatType","chatId","responseTwo","responseThree","members","map","member","User","userName","avatarUrl","Input","props","input","setInput","dispatchFunctions","createMessageProp","noValidate","autoComplete","variant","updateMessage","SocketContext","createContext","InputContainer","socket","useContext","chatMessages","userId","ownerId","message","emit","channelId","Message","handleMessage","dispatchFunctionProps","updateMessageProp","updateChatProp","messages","i","Avatar","src","fontSize","pinned","MessageContainer","Chat","channelAvatar","name","currentUser","deleteChannelProp","leaveChatProp","ChatContainer","deleteChannel","leaveChat","FriendMenu","currentChat","anchorFriendMenu","setAnchorFriendMenu","selectedFriend","setSelectedFriend","handleFriendMenuClick","event","currentTarget","handleFriendMenuClose","friendFormDisplay","setFriendFormDisplay","inputFriend","setInputFriend","handleFriendFormClose","handleFriendCreate","createFriendProp","reload","handleRemoveFriend","handleAddToChat","small","height","large","background","useTheme","paper","DialogContentText","autoFocus","fullWidth","List","friends","friend","anchorEl","keepMounted","MenuItem","ListItem","button","ListItemIcon","ListItemText","primary","Members","currentChatMembers","display","flexDirection","paddingTop","delete","backButton","alignSelf","Pinned","setUserName","setAvatarUrl","setMessage","Typography","gutterBottom","displayMessage","drawerWidth","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShiftLeft","marginLeft","enteringScreen","appBarShiftRight","marginRight","hide","flexShrink","whiteSpace","overflowY","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","padding","mixins","rightToolbar","content","flexGrow","paddingLeft","paddingRight","topBar","hidden","lightBackground","formBackground","Home","leftOpen","setLeftOpen","rightOpen","setRightOpen","channelsOpen","setChannelsOpen","friendsOpen","setFriendsOpen","membersOpen","setMembersOpen","pinnedOpen","setPinnedOpen","channelFormDisplay","setChannelFormDisplay","inputChannel","setInputChannel","inputChannelAvatar","setInputChannelAvatar","handleChannelFormClose","handleChannelCreate","createChannelProp","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","menuButton","Drawer","direction","Divider","channelList","document","querySelector","classList","add","remove","channels","channel","querySelectorAll","forEach","getChat","avatar","friendList","anchor","location","href","membersDiv","pinnedDiv","logOut","HomeContainer","useAsyncEffect","getState","removeItem","createChannel","createGroupProp","createGroup","createFriend","ProtectedRoute","isLoggedIn","Profile","bio","setBio","userObj","Container","FormControl","InputLabel","updateAccountProp","deleteAccountProp","ProfileContainer","updateAccount","deleteAccount","JOIN_CHANNEL","loadChannel","App","loaded","setLoaded","useEffect","getItem","currentChannel","joinedChannels","includes","console","log","on","dispatchedMessage","pushMessage","Provider","path","exact","component","HomePageContainer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","action","newState","configureStore","initialState","createStore","applyMiddleware","thunk","createMuiTheme","palette","main","secondary","red","A400","default","io","connect","store","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.ddb6df56.chunk.js","sourcesContent":["export const baseUrl = `https://dungeons-and-slack.herokuapp.com/api`;\nexport const socketUrl = 'https://dungeons-and-slack.herokuapp.com/';\n\n// export const baseUrl = process.env.REACT_APP_BASEURL || `http://localhost:8080/api`;\n// export const socketUrl = process.env.REACT_APP_SOCKET_URL || 'http://localhost:8080/'\n","import { baseUrl } from '../config/config';\nimport { TOKEN_KEY } from './authentication'\n\nexport const REMOVE_TOKEN = 'slack/authentication/REMOVE_TOKEN';\nexport const LOGIN_INFO = 'slack/loginInformation/LOGIN_INFO';\nexport const UPDATE_USER = 'slack/loginInformation/UPDATE_USER';\nexport const DELETE_USER = 'slack/loginInformation/DELETE+USER';\n\n\n\nexport const loadInformation = userInfo => ({ type: LOGIN_INFO, userInfo })\nexport const updateUser = () => ({ type: UPDATE_USER })\nexport const deleteUser = () => ({ type: DELETE_USER })\n\nexport const userInfo = (token) => async dispatch => {\n  // console.log(`token---------${token}`)\n  const response = await fetch(`${baseUrl}/users/userInfo`, {\n    method: 'get',\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  if(response.ok){\n    const userInfo = await response.json();\n    // console.log(userInfo)\n    dispatch(loadInformation(userInfo));\n  }\n}\n\nexport const updateAccount = (token, userInfo) => async (dispatch) => {\n  const response = await fetch(`${baseUrl}/users`, {\n    method: \"put\",\n    headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\"},\n    body: JSON.stringify(userInfo),\n  });\n\n  if(response.ok){\n    dispatch(updateUser())\n    window.location.href = '/'\n  }\n}\n\nexport const deleteAccount = token => async dispatch => {\n  const response = await fetch(`${baseUrl}/users`, {\n    method: \"delete\",\n    headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\"},\n  })\n  if(response.ok){\n    dispatch(deleteUser())\n    window.localStorage.removeItem(TOKEN_KEY);\n    window.location.href = '/'\n  }\n}\n\nexport default function reducer(state ={}, action) {\n  switch (action.type){\n    case LOGIN_INFO: {\n      return {\n        ...state,\n        ...action.userInfo\n      }\n    }\n    case UPDATE_USER: {\n      return{\n        ...state\n      }\n    }\n    case REMOVE_TOKEN: {\n      return {}\n    }\n    case DELETE_USER: {\n      return {}\n    }\n    default: return state;\n  }\n}\n","import { baseUrl } from '../config/config';\nimport { DELETE_USER } from './loginInformaiton'\n\nexport const TOKEN_KEY = 'slack/authentication/token';\nexport const SET_TOKEN = 'slack/authentication/SET_TOKEN';\nexport const REMOVE_TOKEN = 'slack/authentication/REMOVE_TOKEN';\n\nexport const removeToken = token => ({ type: REMOVE_TOKEN });\nexport const setToken = token => ({ type: SET_TOKEN, token });\n\nexport const loadToken = () => async dispatch => {\n  const token = window.localStorage.getItem(TOKEN_KEY);\n  if (token) {\n    dispatch(setToken(token));\n  }\n};\n\nexport const signUp = user => async dispatch => {\n  const response = await fetch(`${baseUrl}/users`, {\n    method: 'post',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(user),\n  });\n  if (response.ok) {\n    const res = await response.json();\n    const token = res.token;\n    window.localStorage.setItem(TOKEN_KEY, token);\n    dispatch(setToken(token));\n  }\n}\n\nexport const login = (email, password) => async dispatch => {\n  const response = await fetch(`${baseUrl}/session`, {\n    method: 'put',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, password }),\n  });\n\n  if (response.ok) {\n    const { token } = await response.json();\n    window.localStorage.setItem(TOKEN_KEY, token);\n    dispatch(setToken(token));\n  }\n};\n\nexport const logout = () => async (dispatch, getState) => {\n  const { authentication: { token } } = getState();\n  const response = await fetch(`${baseUrl}/session`, {\n    method: 'delete',\n    headers: { Authorization: `Bearer ${token}` },\n  });\n\n  if (response.ok) {\n    window.localStorage.removeItem(TOKEN_KEY);\n    dispatch(removeToken());\n  }\n}\n\nexport default function reducer(state = {}, action) {\n  switch (action.type) {\n    case SET_TOKEN: {\n      return {\n        ...state,\n        token: action.token,\n      };\n    }\n    case REMOVE_TOKEN: {\n      const newState = { ...state };\n      delete newState.token;\n      return newState;\n    }\n    case DELETE_USER: {\n      return {}\n    }\n    default: return state;\n  }\n}\n","import React, {useState} from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { login, signUp } from '../../store/authentication';\nimport Box from '@material-ui/core/Box';\nimport './Splash.css'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function Splash() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [signUpOpen, setSignUpOpen] = React.useState(false);\n  const [email, setEmail] = React.useState('demo@email.com');\n  const [password, setPassword] = React.useState('password');\n  const [signUpEmail, setSignUpEmail] = React.useState('');\n  const [signUpPassword, setSignUpPassword] = React.useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const token = useSelector((state) => state.authentication.token);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const res = dispatch(login(email, password));\n    if(!res.ok) setPassword('')\n  };\n  const handleSignUpSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      firstName,\n      lastName,\n      email: signUpEmail,\n      password: signUpPassword,\n      confirmPassword,\n    };\n    const res = dispatch(signUp(newUser))\n    if(!res.ok){\n      setSignUpPassword('')\n      setSignUpEmail('')\n      setConfirmPassword('')\n    }\n\n  }\n\n  const updateProperty = (callback) => (e) => {\n    callback(e.target.value);\n  };\n\n  if (token) {\n    return <Redirect to='/' />;\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleSignUpOpen = () => {\n    setOpen(false)\n    setSignUpOpen(true)\n  }\n  const handleLogInOpen = () => {\n    setSignUpOpen(false)\n    setOpen(true)\n  }\n  const handleClose = () => {\n    setOpen(false);\n    setSignUpOpen(false);\n  };\n\n  return (\n    <Box className='splash'>\n      <Box onClick={handleClickOpen} className='.splashTextContainer'>\n        <h1 className='splashText'>Dunegons<br/>&<br/>Slack</h1>\n      </Box>\n\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} onSubmit={handleSubmit} PaperProps={{style: {backgroundColor: '#59405c', alignItems:'center', width: '35em', heigth: 'auto'}}}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Sign In\n        </DialogTitle>\n        <DialogContent dividers>\n            <TextField id=\"email\" error={!email} label=\"email\" value={email} onChange={updateProperty(setEmail)} color=\"primary\" /><br/>\n            <TextField id=\"password\" error={!password} type='password' label=\"password\" value={password} onChange={updateProperty(setPassword)} color=\"primary\" />\n        </DialogContent>\n          <DialogActions className={classes.dialogAct}>\n            <Button color=\"primary\" onClick={handleSignUpOpen} >\n              Sign Up\n            </Button>\n            <Button disabled={!email || !password} onClick={handleSubmit} color=\"primary\">\n              Sign In\n            </Button>\n          </DialogActions>\n      </Dialog>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={signUpOpen} onSubmit={handleSignUpSubmit} PaperProps={{style: {backgroundColor: '#59405c', alignItems:'center', width: '35em', heigth: 'auto'}}}>\n        <DialogTitle id=\"customized-dialog-title\"  onClose={handleClose}>\n          Sign Up\n        </DialogTitle>\n        <DialogContent dividers>\n            <TextField id=\"email\" error={!signUpEmail} label=\"Email\" value={signUpEmail} onChange={updateProperty(setSignUpEmail)} color=\"primary\" /><br/>\n            <TextField id=\"email\" error={!firstName} label=\"First Name\" value={firstName} onChange={updateProperty(setFirstName)} color=\"primary\" /><br/>\n            <TextField id=\"email\" error={!lastName} label=\"Last Name\" value={lastName} onChange={updateProperty(setLastName)} color=\"primary\" /><br/>\n            <TextField id=\"signUpPassword\" error={!signUpPassword} type='password' label=\"Password\" value={signUpPassword} onChange={updateProperty(setSignUpPassword)} color=\"primary\" /><br/>\n            <TextField id=\"email\" error={!confirmPassword} label=\"Confirm Password\" type='password' value={confirmPassword} onChange={updateProperty(setConfirmPassword)} color=\"primary\" /><br/>\n        </DialogContent>\n          <DialogActions className={classes.dialogAct}>\n            <Button color=\"primary\" onClick={handleLogInOpen} >\n              Sign In\n            </Button>\n            <Button color=\"primary\" onClick={handleSignUpSubmit} >\n              Sign Up\n            </Button>\n          </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\n","import React from 'react'\nimport Splash from './Splash'\n\nexport default function SplashContainer() {\n  return (\n    <>\n      <Splash />\n    </>\n  )\n}\n","import { baseUrl } from '../config/config';\nimport { DELETE_USER } from './loginInformaiton'\n\nconst REMOVE_TOKEN = 'slack/authentication/REMOVE_TOKEN';\nconst CURRENT_CHAT = 'slack/currentChat/CURRENT_CHAT';\nconst CLEAR_CHAT = 'slack/currentChat/CLEAR_CHAT';\nconst ADD_MESSAGE = 'slack/currentChat/ADD_MESSAGE'\n\nexport const loadChat = (chatInfo, chat, returnMembers) => ({ type: CURRENT_CHAT, chatInfo, chat, returnMembers });\nexport const clearChat = () => ({ type: CLEAR_CHAT })\nexport const addMessage = (newMessage) =>({ type: ADD_MESSAGE, newMessage })\n\nexport const chatInfo = (token, chatType, chatId) => async dispatch => {\n  const response = await fetch(`${baseUrl}/${chatType}/${chatId}/message`, {\n    method: 'get',\n    headers: { Authorization: `Bearer ${token}` },\n  });\n\n  const responseTwo = await fetch (`${baseUrl}/${chatType}/${chatId}`, {\n    method: 'get',\n    headers: { Authorization: `Bearer ${token}` },\n  })\n\n  const responseThree = await fetch (`${baseUrl}/${chatType}/${chatId}/members`, {\n    method: 'get',\n    headers: { Authorization: `Bearer ${token}` },\n  })\n\n    if(responseTwo.ok){\n      const chat = await responseTwo.json();\n      const chatInfo = await response.json();\n      const members = await responseThree.json();\n      const returnMembers = members.map(member => {\n        return {id:member.User.id, firstName : member.User.firstName, lastName: member.User.lastName, userName: member.User.userName, avatarUrl: member.User.avatarUrl}\n      })\n      // console.log(returnMembers )\n      dispatch(loadChat(chatInfo, chat, returnMembers))\n  }\n\n}\n\nexport const leaveChat = (userId, chatId, chatType, token) => async dispatch => {\n  const response = await fetch(`${baseUrl}/${chatType}/${chatId}/${userId}`, {\n    method: 'delete',\n    headers: { Authorization: `Bearer ${token}` },\n  })\n\n  if(response.ok){\n    dispatch(clearChat())\n  }\n}\n\nexport const deleteChannel = (channelId, token) => async dispatch => {\n  const response = await fetch (`${baseUrl}/channels/${channelId}`, {\n    method: 'delete',\n    headers: { Authorization: `Bearer ${token}` },\n  })\n  if(response.ok){\n    dispatch(clearChat())\n  }\n}\n\nexport const pushMessage = (newMessage) => async dispatch => {\n  const response = await fetch (`${baseUrl}/users/${newMessage.userId}`, {\n    method: 'get',\n  })\n\n  if(response.ok){\n    const userInfo = await response.json()\n    const dispatchedMessage = {...newMessage, User: userInfo}\n    dispatch(addMessage(dispatchedMessage))\n  }\n\n}\n\nexport default function reducer(state ={}, action) {\n  switch (action.type){\n    case CURRENT_CHAT: {\n      return {\n        chat: action.chat,\n        messages: [...action.chatInfo],\n        members: action.returnMembers\n      }\n    }\n    case ADD_MESSAGE: {\n      return {\n        chat: state.chat,\n        messages: [...state.messages, action.newMessage],\n        members: state.returnMembers\n      }\n    }\n    case CLEAR_CHAT: {\n      return {}\n    }\n    case REMOVE_TOKEN: {\n      return {};\n    }\n    case DELETE_USER: {\n      return {}\n    }\n    default: return state;\n  }\n}\n","import React from 'react'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport './Input.css'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '100%',\n    },\n  },\n}));\n\nexport default function Input({ props }) {\n  const classes = useStyles();\n\n  const [input, setInput] = React.useState('');\n  const handleChange = e => setInput(e.target.value)\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    // console.log(e.target)\n    props.dispatchFunctions.createMessageProp(input)\n    setInput('')\n  }\n\n  return (\n    <div className='inputComponentContainer'>\n      <form className={classes.root} onSubmit={handleFormSubmit} noValidate autoComplete=\"off\">\n          <TextField\n          id=\"outlined-secondary\"\n          label=\"Keep it civil...\"\n          variant=\"outlined\"\n          color=\"primary\"\n          value={input}\n          onChange={handleChange}\n        />\n      </form>\n    </div>\n  )\n}\n","import { baseUrl } from '../config/config';\n\nexport const CREATE_CHANNEL = 'slack/create/CREATE_CHANNEL'\n\nconst updateChannel = () => ({ type: CREATE_CHANNEL })\n\nexport const createChannel = (token, body) => async dispatch => {\n  const response = await fetch(`${baseUrl}/channels`, {\n    method: 'post',\n    headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\"},\n    body: JSON.stringify(body)\n  })\n  if(response.ok){\n    // dispatch(updateChannel())\n  }\n}\nexport const createGroup= (body, token) => async dispatch => {\n  const name = body.name;\n  const userId = body.userId;\n  // console.log(name)\n  // console.log(userId)\n  const response = await fetch(`${baseUrl}/groups/${userId}`, {\n    method: 'post',\n    headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\"},\n    body: JSON.stringify({name: name})\n  })\n  if(response.ok){\n    // dispatch\n  }\n}\nexport const createMessage = (body, token) => async dispatch => {\n  const chatType = body.chatType;\n  const chatId = body.chatId;\n  const message = body.message;\n  // console.log(message)\n  const response = await fetch(`${baseUrl}/${chatType}/${chatId}/message`, {\n    method: 'post',\n    headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\"},\n    body: JSON.stringify({message: message})\n  })\n}\nexport const updateMessage = (id, type, token) => async dispatch =>{\n  const method = type === 'delete' ? 'delete' : 'put';\n  const response = await fetch(`${baseUrl}/messages/${id}`, {\n    method: method,\n    headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\"},\n  })\n}\nexport const createFriend = (token, body) => async dispatch => {\n  const response = await fetch(`${baseUrl}/users/makeFriendWithEmail`, {\n    method: 'post',\n    headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\"},\n    body: JSON.stringify(body)\n  })\n  if(response.ok){\n    // console.log(response.json())\n  }\n\n}\n\nexport default function reducer(state = {}, action){\n  switch(action.type){\n    case CREATE_CHANNEL: {\n      return{\n        ...state,\n      }\n    }\n    default: return state;\n  }\n}\n","import { createContext } from 'react';\n\nconst SocketContext = createContext();\n\nexport default SocketContext;\n","import React, {useContext} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\n\nimport Input from './Input'\nimport {createMessage} from '../../store/create'\nimport { chatInfo } from '../../store/currentChat'\nimport SocketContext from '../../socketContext'\n\nexport default function InputContainer() {\n  const socket = useContext(SocketContext)\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.authentication.token)\n\n  const chat = useSelector(state => state.chatMessages.chat);\n  const userId = useSelector(state => state.user.user.id);\n  const chatId = chat.id;\n  const chatType = chat.ownerId ? 'channels' : 'groups';\n  const createMessageProp= async (message) => {\n    /////socket emmit here.--- comment the create Message dispatch\n    await socket.emit(`channel${chatId}`, {userId, message, channelId: chatId })\n    // const body = {userId, chatId, chatType, message}\n    // await dispatch(createMessage(body, token))\n    // await dispatch(chatInfo(token, chatType, chatId))\n  };\n\n  const dispatchFunctions= {createMessageProp};\n  const props ={dispatchFunctions};\n\n  if(!props) return null;\n\n  return (\n    <>\n      <Input props={props} />\n    </>\n  )\n}\n","import React from 'react'\nimport PersonIcon from '@material-ui/icons/Person';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RoomIcon from '@material-ui/icons/Room';\n\nimport './Message.css'\n\nexport default function Message({ props }) {\n  // return (\n  //   <div>\n  //       {props.messages.map((message, i) => {\n  //         return <h3 key={i} >{message.message}</h3>\n  //       })}\n  //   </div>\n  // )\n\n  const handleMessage= (id, type) => {\n    // console.log(`${type}...${id}`)\n    props.dispatchFunctionProps.updateMessageProp(id, type)\n    props.dispatchFunctionProps.updateChatProp()\n  };\n\n  return (\n    <div>\n      {props.messages.map((message, i) => {\n        return(\n          <div key={`messageContainerDiv${i}`} className='individualMessageContainer'>\n            <div key={`avatarContainer${i}`} className='individualAvatarContainer'>\n              {message.User.avatarUrl? <Avatar src={message.User.avatarUrl} /> : <PersonIcon fontSize='large' />}\n            </div>\n            <div key={`rightDiv${i}`} className='individualRightContainer'>\n              <div className='messageTopBar' key={`messageTopBar${i}`}>\n                {message.User.userName ? <div className='messageAuthor' key={`name${i}`}>{message.User.userName}</div> :<div className='messageAuthor' key={`name${i}`}>{message.User.firstName}</div>}\n                <div>\n                  {props.user.user.id === message.userId ? <Button key={`options${i}`} onClick={() => handleMessage(message.id, 'delete')}><DeleteIcon fontSize='small' /></Button> : null}\n                  {message.pinned ? <Button onClick={() => handleMessage(message.id, 'pin')}><RoomIcon className={'pinned'} /></Button> : <Button onClick={() => handleMessage(message.id, 'pin')}><RoomIcon /></Button>}\n                </div>\n              </div>\n              <div key={i} >{message.message}</div>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n","import React, {useEffect} from 'react'\nimport Message from './Message'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { updateMessage } from '../../store/create'\nimport { chatInfo } from '../../store/currentChat'\n\nexport default function MessageContainer() {\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.authentication.token)\n  const chatId = useSelector(state => state.chatMessages.chat.id)\n  const chatOwnerId = useSelector(state => state.chatMessages.chat.ownerId)\n  const chatType = chatOwnerId ? 'channels' : 'groups'\n\n  const updateMessageProp = async (id, type) => {\n    await dispatch(updateMessage(id, type, token))\n    await dispatch(chatInfo(token, chatType, chatId))\n  }\n  const updateChatProp = () => {\n    dispatch(chatInfo(token, chatType, chatId))\n  }\n\n  const messages = useSelector(state => state.chatMessages.messages)\n  const user = useSelector(state => state.user)\n  const dispatchFunctionProps = { updateMessageProp, updateChatProp }\n  const props = { messages, user, dispatchFunctionProps }\n\n  if(!props.messages) return null;\n\n  return (\n    <>\n      <Message props={props} />\n    </>\n  )\n}\n","import React from 'react'\nimport ChatIcon from '@material-ui/icons/Chat';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\n\nimport './Chat.css'\n\nimport Message from '../message/MessageContainer';\n\nexport default function Chat({ props }) {\n  const handleLeave = () => {\n    const userId = props.currentUser;\n    const chatId = props.chat.id;\n    let chatType;\n    props.chat.ownerId ? chatType='channels' : chatType='groups';\n    props.dispatchFunctions.leaveChatProp(userId, chatId, chatType);\n  }\n  const handleDelete = () => {\n    const chatId = props.chat.id\n    props.dispatchFunctions.deleteChannelProp(chatId)\n  }\n  return (\n    <div className='chat'>\n      <span className='topBar'>\n        {props.chat.channelAvatar ? <Avatar src={props.chat.channelAvatar} /> : <ChatIcon />}\n        <h1>{props.chat.name}</h1>\n        {props.currentUser === props.chat.ownerId ? <Button onClick={handleDelete} >Delete</Button> : <Button onClick={handleLeave}>Leave</Button>}\n      </span>\n\n      <div className='messageContainer'>\n        <div className='innerMessageContainer' >\n          <Message />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { userInfo } from '../../store/loginInformaiton'\nimport { leaveChat, deleteChannel } from '../../store/currentChat'\nimport InputContainer from '../input/InputContainer'\nimport Chat from './Chat';\n\nexport default function ChatContainer() {\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.authentication.token)\n\n\n  const leaveChatProp = ( userId, chatId, chatType) => {\n    // console.log(userId, chatId, chatType)\n    dispatch(leaveChat(userId, chatId, chatType, token))\n    dispatch(userInfo(token))\n  }\n  const deleteChannelProp = (channelId) => {\n    dispatch(deleteChannel(channelId, token))\n    dispatch(userInfo(token))\n  }\n\n  const chat = useSelector(state => state.chatMessages)\n  const currentUser = useSelector(state => state.user.user.id)\n  const dispatchFunctions = {deleteChannelProp, leaveChatProp}\n  const props ={currentUser, ...chat, dispatchFunctions}\n\n  if(!props.chat) return <h1 className='splashText'>Dunegons<br/>&<br/>Slack</h1>\n  return (\n    <>\n      <Chat props={props} />\n      <InputContainer />\n    </>\n  )\n}\n","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport AddIcon from '@material-ui/icons/Add';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { baseUrl } from '../../config/config'\n\nexport default function FriendMenu({ props }) {\n  const token = useSelector(state => state.authentication.token)\n  const currentChat = useSelector(state => state.chatMessages.chat)\n\n  const [anchorFriendMenu, setAnchorFriendMenu] = React.useState(null);\n  const [selectedFriend, setSelectedFriend] = React.useState(null)\n  const handleFriendMenuClick = (event) => {\n    setAnchorFriendMenu(event.currentTarget);\n  };\n  const handleFriendMenuClose = () => {\n    setAnchorFriendMenu(null);\n    setSelectedFriend(null)\n  };\n  const handleFriendSelect = (id) => {\n    setSelectedFriend(id)\n  }\n\n  //CREATE FRIEND\n  const [friendFormDisplay, setFriendFormDisplay] = React.useState(false);\n  const [inputFriend, setInputFriend] = React.useState('');\n  const handleFriendInputChange = e => setInputFriend(e.target.value)\n  const handleFriendForm = () => {\n    setFriendFormDisplay(true);\n  };\n  const handleFriendFormClose = () => {\n    setFriendFormDisplay(false);\n  };\n  const handleFriendCreate = async () => {\n    await props.dispatchFunctions.createFriendProp({email: inputFriend})\n    setFriendFormDisplay(false);\n    props.dispatchFunctions.reload();\n  }\n  const handleRemoveFriend = async (id) => {\n    await fetch(`${baseUrl}/users/delete/${id}`,{\n      method: 'delete',\n      headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\"},\n    })\n    props.dispatchFunctions.reload();\n  }\n  const handleAddToChat = async (id) => {\n    await fetch(`${baseUrl}/users/joinChannel/${id}/${currentChat.id}`,{\n      method: 'post',\n      headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\"},\n    })\n    props.dispatchFunctions.reload();\n  }\n\n  //STYLES\n  const useStyles = makeStyles((theme) => ({\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    large: {\n      width: theme.spacing(7),\n      height: theme.spacing(7),\n    },\n    background : {\n      backgroundColor: `#59405c`,\n    }\n  }));\n  const classes = useStyles();\n  const theme = useTheme();\n\n  //RETURN DISPLAY\n  return (\n    <div>\n      <Dialog open={friendFormDisplay} classes={{paper: classes.background}}onClose={handleFriendFormClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add Friend</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To add a friend, please enter your friend's email here.\n          </DialogContentText>\n          <TextField\n            error={inputFriend === ''}\n            autoFocus\n            margin=\"dense\"\n            id=\"friendName\"\n            label=\"Friend's Email\"\n            type=\"text\"\n            fullWidth\n            value={inputFriend}\n            onChange={handleFriendInputChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleFriendFormClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleFriendCreate} disabled={inputFriend === ''} color=\"primary\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <List className='friendList'>\n          {props.user.friends.map((friend) => (\n            <div key={`friendWrapper${friend.id}`}>\n            <Menu\n              id={`friendMenu${friend.id}`}\n              anchorEl={anchorFriendMenu}\n              keepMounted\n              open={friend.id === selectedFriend}\n              classes={{paper: classes.background}}\n              onClose={handleFriendMenuClose}>\n              <MenuItem onClick={handleFriendMenuClose}>\n                {friend.avatarUrl ? <Avatar src={friend.avatarUrl} className={classes.small} /> : <AccountCircleIcon /> }\n                {friend.userName ? `${friend.userName}` : `${friend.firstName} ${friend.lastName}`}\n              </MenuItem>\n              <div onClick={() => handleAddToChat(friend.id)}>\n                <MenuItem disabled={!currentChat} onClick={handleFriendMenuClose}>Invite to curren Chat</MenuItem>\n              </div>\n              <div onClick={() => handleRemoveFriend(friend.id)}>\n                <MenuItem onClick={handleFriendMenuClose}>Remove Friend</MenuItem>\n              </div>\n            </Menu>\n            <div key={`div${friend.id}`} onClick={handleFriendMenuClick}>\n              <ListItem button onClick={() => handleFriendSelect(friend.id)}>\n                <ListItemIcon>{friend.avatarUrl ? <Avatar src={friend.avatarUrl} className={classes.small} /> : <AccountCircleIcon /> }</ListItemIcon>\n                <ListItemText primary={friend.userName ? friend.userName : `${friend.firstName} ${friend.lastName}`} />\n              </ListItem>\n            </div>\n            </div>\n          ))}\n          <ListItem button onClick={handleFriendForm} >\n            <ListItemIcon><AddIcon /></ListItemIcon>\n            <ListItemText primary={'Find Friends'} />\n          </ListItem>\n        </List>\n    </div>\n  )\n}\n","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport AddIcon from '@material-ui/icons/Add';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { baseUrl } from '../../config/config'\n\nexport default function Members({ props }) {\n  const token = useSelector(state => state.authentication.token)\n  const currentChat = useSelector(state => state.chatMessages.chat)\n  const currentChatMembers = useSelector(state => state.chatMessages.members)\n\n  const [anchorFriendMenu, setAnchorFriendMenu] = React.useState(null);\n  const [selectedFriend, setSelectedFriend] = React.useState(null)\n  const handleFriendMenuClick = (event) => {\n    setAnchorFriendMenu(event.currentTarget);\n  };\n  const handleFriendMenuClose = () => {\n    setAnchorFriendMenu(null);\n    setSelectedFriend(null)\n  };\n  const handleFriendSelect = (id) => {\n    setSelectedFriend(id)\n  }\n\n  //CREATE FRIEND\n  const [friendFormDisplay, setFriendFormDisplay] = React.useState(false);\n  const [inputFriend, setInputFriend] = React.useState('');\n  const handleFriendInputChange = e => setInputFriend(e.target.value)\n  const handleFriendForm = () => {\n    setFriendFormDisplay(true);\n  };\n  const handleFriendFormClose = () => {\n    setFriendFormDisplay(false);\n  };\n  const handleFriendCreate = async () => {\n    await props.dispatchFunctions.createFriendProp({email: inputFriend})\n    setFriendFormDisplay(false);\n    props.dispatchFunctions.reload();\n  }\n\n  //STYLES\n  const useStyles = makeStyles((theme) => ({\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    large: {\n      width: theme.spacing(7),\n      height: theme.spacing(7),\n    },\n  }));\n  const classes = useStyles();\n  const theme = useTheme();\n\n  //RETURN DISPLAY\n  if(!currentChatMembers) return null\n  return (\n    <div>\n      <List className='friendList'>\n          {currentChatMembers.map((friend) => (\n            <div key={`friendWrapper${friend.id}`}>\n            {/* <Menu\n              id={`friendMenu${friend.id}`}\n              anchorEl={anchorFriendMenu}\n              keepMounted\n              open={friend.id === selectedFriend}\n              onClose={handleFriendMenuClose}>\n              <MenuItem onClick={handleFriendMenuClose}>\n                {friend.avatarUrl ? <Avatar src={friend.avatarUrl} className={classes.small} /> : <AccountCircleIcon /> }\n                {friend.userName ? `${friend.userName}` : `${friend.firstName} ${friend.lastName}`}\n              </MenuItem>\n              <div onClick={() => handleAddToChat(friend.id)}>\n                <MenuItem disabled={!currentChat} onClick={handleFriendMenuClose}>Invite to curren Chat</MenuItem>\n              </div>\n              <div onClick={() => handleRemoveFriend(friend.id)}>\n                <MenuItem onClick={handleFriendMenuClose}>Remove Friend</MenuItem>\n              </div>\n            </Menu> */}\n            <div key={`div${friend.id}`} onClick={handleFriendMenuClick}>\n              <ListItem button onClick={() => handleFriendSelect(friend.id)}>\n                <ListItemIcon>{friend.avatarUrl ? <Avatar src={friend.avatarUrl} className={classes.small} /> : <AccountCircleIcon /> }</ListItemIcon>\n                <ListItemText primary={friend.userName ? friend.userName : `${friend.firstName} ${friend.lastName}`} />\n              </ListItem>\n            </div>\n            </div>\n          ))}\n        </List>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport ChatIcon from '@material-ui/icons/Chat';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport './Pinned.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: '10px',\n    backgroundColor: `#59405c`,\n    '& > *': {\n      margin: theme.spacing(1),\n      backgroundColor: `#59405c`,\n    },\n    large: {\n      width: theme.spacing(20),\n      height: theme.spacing(20),\n    },\n    delete: {\n      paddingTop: '10px',\n    },\n    backButton: {\n      alignSelf: 'flex-end'\n    },\n  },\n}));\n\nexport default function Pinned({ props }) {\n  const classes = useStyles();\n  const messages = useSelector(state => state.chatMessages.messages)\n\n  const [open, setOpen] = React.useState(false);\n  const [userName, setUserName] = React.useState('');\n  const [firstName, setFirstName] = React.useState('');\n  const [lastName, setLastName] = React.useState('');\n  const [avatarUrl, setAvatarUrl] = React.useState('');\n  const [message, setMessage] = React.useState('');\n\n  const displayMessage = (message) => {\n    setUserName(message.User.userName)\n    setFirstName(message.User.firstName)\n    setLastName(message.User.lastName)\n    setAvatarUrl(message.User.avatarUrl)\n    setMessage(message.message)\n    setOpen(true)\n  }\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if(!messages) return null;\n  return (\n    <div>\n      <Dialog onClose={handleClose} id={'pinnedMsgDiologue'} PaperProps={{style: {backgroundColor: '#59405c', width: '50em', heigth: 'auto'}}} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" className={'formBackground'} onClose={handleClose}>\n          <ListItemIcon>{avatarUrl ? <Avatar src={avatarUrl} /> : <AccountCircleIcon />}</ListItemIcon>\n          {userName ? userName : `${firstName} ${lastName}`}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom >\n            {message}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n\n        </DialogActions>\n      </Dialog>\n      {messages.map(message => {\n        if(message.pinned){\n          return(\n            <ListItem key={`pinnedMessage${message.id}`} button onClick={() => displayMessage(message)}>\n              <ListItemIcon><ChatIcon /></ListItemIcon>\n              <ListItemText>{message.message}</ListItemText>\n            </ListItem>\n            )\n        }else{\n          return null\n        }\n      })}\n    </div>\n  )\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport Avatar from '@material-ui/core/Avatar';\nimport { sizing } from '@material-ui/system';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport RoomIcon from '@material-ui/icons/Room';\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport './HomePage.css'\nimport ChatContainer from '../chat/ChatContainer'\nimport FriendMenu from '../FriendMenu/FriendMenu'\nimport Members from '../members/Members'\nimport Pinned from '../pinned/Pinned'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    height: \"100%\",\n    backgroundColor: `#4b5d67`,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n      // backgroundColor: '#322f3d'\n    }),\n  },\n  appBarShiftLeft: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  appBarShiftRight: {\n    marginRight: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  // menuButton: {\n  //   marginRight: 36,\n  // },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    paper: {\n      backgroundColor: `#4b5d67`,\n    },\n    overflowY: 'scroll',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    zIndex: theme.zIndex.drawer + 2,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n\n  },\n  rightToolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    paddingTop: theme.spacing(7),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  topBar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    backgroundColor: '#322f3d'\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  hidden: {\n    display: 'none'\n  },\n  lightBackground: {\n    backgroundColor: `#59405c`,\n  },\n  formBackground: {\n    backgroundColor: `#59405c`,\n  }\n}));\n\nexport default function Home({ props }) {\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [leftOpen, setLeftOpen] = React.useState(false);\n  const [rightOpen, setRightOpen] = React.useState(false);\n  const [channelsOpen, setChannelsOpen] = React.useState(true);\n  const [groupsOpen, setGroupsOpen] = React.useState(true);\n  const [friendsOpen, setFriendsOpen] = React.useState(true);\n  const [membersOpen, setMembersOpen] = React.useState(true);\n  const [pinnedOpen, setPinnedOpen] = React.useState(true);\n\n  const handleRightDrawerOpen = () => {\n    setRightOpen(true);\n  };\n  const handleRightDrawerClose = () => {\n    setRightOpen(false);\n  };\n  const handleLeftDrawerOpen = () => {\n    setLeftOpen(true);\n  };\n  const handleLeftDrawerClose = () => {\n    setLeftOpen(false);\n  };\n  const handleChannelToggle = () => {\n    const channelList = document.querySelector('.channelList')\n    if(channelsOpen){\n      channelList.classList.add('hidden')\n      setChannelsOpen(false)\n    }else{\n      channelList.classList.remove('hidden')\n      setChannelsOpen(true)\n    }\n  }\n\n  const handleFriendToggle = () => {\n    const friendList = document.querySelector('.friendList')\n    if(friendsOpen){\n      friendList.classList.add('hidden')\n      setFriendsOpen(false)\n    }else{\n      friendList.classList.remove('hidden')\n      setFriendsOpen(true)\n    }\n  }\n  const handleMembersToggle = () => {\n    const membersDiv = document.querySelector('.membersDiv')\n    if(membersOpen){\n      membersDiv.classList.add('hidden')\n      setMembersOpen(false)\n    }else{\n      membersDiv.classList.remove('hidden')\n      setMembersOpen(true)\n    }\n  }\n  const handlePinnedToggle = () => {\n    const pinnedDiv = document.querySelector('.pinnedDiv')\n    if(pinnedOpen){\n      pinnedDiv.classList.add('hidden')\n      setPinnedOpen(false)\n    }else{\n      pinnedDiv.classList.remove('hidden')\n      setPinnedOpen(true)\n    }\n  }\n  const handleSelected = (className) => {\n    document.querySelectorAll('.selectedChat').forEach(e => e.classList.remove('selectedChat'))\n    document.querySelector(`.${className}`).classList.add('selectedChat')\n  }\n\n  //CREATE CHANNEL MODUL\n  const [channelFormDisplay, setChannelFormDisplay] = React.useState(false);\n  const [inputChannel, setInputChannel] = React.useState('');\n  const [inputChannelAvatar, setInputChannelAvatar] = React.useState('');\n  const handleChannelInputChange = e => setInputChannel(e.target.value)\n  const handleChannelAvatarInputChange = e => setInputChannelAvatar(e.target.value)\n  const handleChannelForm = () => {\n    setChannelFormDisplay(true);\n  };\n  const handleChannelFormClose = () => {\n    setChannelFormDisplay(false);\n  };\n  const handleChannelCreate = async () => {\n    await props.dispatchFunctions.createChannelProp({name: inputChannel, avatarUrl: inputChannelAvatar, userId: props.user.user.id})\n    setChannelFormDisplay(false);\n    props.dispatchFunctions.reload();\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Dialog open={channelFormDisplay} classes={{paper: classes.formBackground}}onClose={handleChannelFormClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Create Your Channel</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To create a channel, please enter your channel's name here.\n          </DialogContentText>\n          <TextField\n            error={inputChannel === ''}\n            autoFocus\n            margin=\"dense\"\n            id=\"channelName\"\n            label=\"Channel Name\"\n            type=\"text\"\n            fullWidth\n            value={inputChannel}\n            onChange={handleChannelInputChange}\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"channelAvatar\"\n            label=\"Channel Avatar Url\"\n            type=\"text\"\n            fullWidth\n            value={inputChannelAvatar}\n            onChange={handleChannelAvatarInputChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleChannelFormClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleChannelCreate} disabled={inputChannel === ''} color=\"primary\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShiftLeft]: leftOpen,\n          [classes.appBarShiftRight]: rightOpen,\n        })}\n      >\n        <Toolbar className={classes.topBar}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleLeftDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: leftOpen,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <div></div>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleRightDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: rightOpen,\n            })}\n          >\n            <AccountCircleIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, 'hideScroll', {\n          [classes.drawerOpen]: leftOpen,\n          [classes.drawerClose]: !leftOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: leftOpen,\n            [classes.drawerClose]: !leftOpen,\n          }, classes.lightBackground),\n        }}>\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleLeftDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <ListItem button onClick={handleChannelToggle}>\n          <ListItemIcon><ChatBubbleIcon /></ListItemIcon>\n          <ListItemText primary={'Your Channels'} />\n        </ListItem>\n        <Divider />\n        <List className='channelList' >\n          {props.user.channels.map((channel) => (\n            <div className={\"channels\" + channel.id} onClick={() => handleSelected(\"channels\" + channel.id)} key={channel.id} >\n              <ListItem button\n                        onClick={ () => props.dispatchFunctions.getChat('channels', channel.id)}\n                        key={channel.id}>\n                <ListItemIcon>{channel.avatar ? <Avatar src={channel.avatar} className={classes.small} /> : <ChatBubbleIcon />}</ListItemIcon>\n                <ListItemText primary={channel.name} />\n              </ListItem>\n            </div>\n          ))}\n          <ListItem button onClick={handleChannelForm}>\n            <ListItemIcon><AddIcon /></ListItemIcon>\n            <ListItemText primary={'Create Channel'} />\n          </ListItem>\n\n        </List>\n        {/* <Divider />\n        <ListItem button onClick={handleGroupToggle}>\n            <ListItemIcon><ChatBubbleOutlineIcon /></ListItemIcon>\n            <ListItemText primary={'Your Groups'} />\n        </ListItem>\n        <Divider />\n        <List className='groupList'>\n          {props.user.groups.map((group) => (\n            <div className={\"groups\" + group.id} onClick={() => handleSelected(\"groups\" + group.id)} key={group.id} >\n              <ListItem button\n                        onClick={ () => props.dispatchFunctions.getChat('groups', group.id)}\n                        key={group.id}>\n                <ListItemIcon><ChatIcon /></ListItemIcon>\n                <ListItemText primary={group.name} />\n              </ListItem>\n            </div>\n          ))}\n          <ListItem button onClick={handleGroupForm}>\n            <ListItemIcon><AddIcon /></ListItemIcon>\n            <ListItemText primary={'Create Group'} />\n          </ListItem>\n        </List> */}\n        <Divider />\n        <ListItem button onClick={handleFriendToggle}>\n            <ListItemIcon><AccountCircleIcon /></ListItemIcon>\n            <ListItemText primary={'Your Friends'} />\n        </ListItem>\n        <Divider />\n        <FriendMenu props={props} />\n      </Drawer>\n\n      <main className={classes.content}>\n        <ChatContainer />\n      </main>\n\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: rightOpen,\n          [classes.drawerClose]: !rightOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: rightOpen,\n            [classes.drawerClose]: !rightOpen,\n          }, classes.lightBackground),\n        }}\n        anchor= \"right\">\n        <div className={classes.rightToolbar}>\n          <IconButton onClick={handleRightDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n\n          <ListItem button onClick={() => window.location.href = '/profile'}>\n            <ListItemIcon>{props.user.user.avatarUrl ? <Avatar src={props.user.user.avatarUrl} className={classes.small} /> : <AccountCircleIcon />}</ListItemIcon>\n            <ListItemText primary={props.user.user.userName ? props.user.user.userName : `${props.user.user.firstName} ${props.user.user.lastName}`} />\n          </ListItem>\n\n        <Divider />\n        <ListItem button onClick={handleMembersToggle}>\n          <ListItemIcon><SupervisedUserCircleIcon /></ListItemIcon>\n          <ListItemText>Members</ListItemText>\n        </ListItem>\n        <Divider />\n        <div className='membersDiv'>\n          <Members props={props} />\n        </div>\n        <Divider />\n        <ListItem button onClick={handlePinnedToggle}>\n          <ListItemIcon><RoomIcon /></ListItemIcon>\n          <ListItemText>Pinned Messages</ListItemText>\n        </ListItem>\n        <Divider />\n        <div className='pinnedDiv'>\n          <Pinned props={props} />\n        </div>\n        <Divider />\n        <List>\n          <ListItem onClick={() => props.dispatchFunctions.logOut()} button>\n            <ListItemIcon> <ExitToAppIcon /> </ListItemIcon>\n            <ListItemText primary={ \"Logout\" } />\n          </ListItem>\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useAsyncEffect from 'use-async-effect'\n\nimport HomePage from './HomePage'\nimport { userInfo } from '../../store/loginInformaiton'\nimport { logout } from '../../store/authentication'\nimport { chatInfo } from '../../store/currentChat'\nimport { createChannel, createGroup, createFriend } from '../../store/create';\n\nexport default function HomeContainer() {\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.authentication.token)\n\n  const logOut = () => {\n    dispatch(logout())\n  }\n  const getChat = (chatType, chatId) => {\n    dispatch(chatInfo(token, chatType, chatId))\n  }\n  const createChannelProp = (body) => {\n    dispatch(createChannel(token, body))\n  }\n  const createFriendProp =(body) => {\n    // console.log(body)\n    dispatch(createFriend(token, body))\n  }\n  const createGroupProp =(body) => {\n    dispatch(createGroup(body, token))\n  }\n  const reload = () => {\n    dispatch(userInfo(token))\n  }\n  useAsyncEffect(() => {\n    dispatch(userInfo(token))\n  }, [])\n\n\n  const user = useSelector(state => state.user)\n  const dispatchFunctions = { logOut, getChat, createChannelProp, createGroupProp, createFriendProp, reload }\n  const props = {user, dispatchFunctions}\n\n  if(!props.user.friends) return (null)\n\n  return (\n    <>\n      <HomePage props={props} />\n    </>\n  )\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst ProtectedRoute = props => {\n  const { isLoggedIn } = props;\n  if (!isLoggedIn) {\n    return <Redirect to='/splash' />\n  }\n  return <Route { ...props } />;\n}\n\nexport default ProtectedRoute;\n","import React, {useEffect} from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Input from '@material-ui/core/Input';\nimport Avatar from '@material-ui/core/Avatar';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport './Profile.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: '10px',\n    backgroundColor: `#4b5d67`,\n    '& > *': {\n      margin: theme.spacing(1),\n      backgroundColor: `#4b5d67`,\n    },\n    large: {\n      width: theme.spacing(20),\n      height: theme.spacing(20),\n    },\n    delete: {\n      paddingTop: '10px',\n    },\n    backButton: {\n      alignSelf: 'flex-end'\n    },\n  },\n}));\n\nexport default function Profile({ props }) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [avatarUrl, setAvatarUrl] = React.useState(props.avatarUrl);\n  const [email, setEmail] = React.useState(props.email);\n  const [userName, setUserName] = React.useState(props.userName);\n  const [firstName, setFirstName] = React.useState(props.firstName);\n  const [lastName, setLastName] = React.useState(props.lastName);\n  const [bio, setBio] = React.useState(props.bio);\n\n\n  const userObj = {avatarUrl, email, userName, firstName, lastName, bio}\n\n\n  const handleAvatarChange = e => setAvatarUrl(e.target.value)\n  const handleEmailChange = e => setEmail(e.target.value)\n  const handleUserNamechange = e => setUserName(e.target.value)\n  const handleFirstNameChange = e => setFirstName(e.target.value)\n  const handleLastNameChange = e => setLastName(e.target.value)\n  const handleBioChange = e => setBio(e.target.value)\n\n  return (\n    <Container className={classes.root}>\n      <Avatar src={props.avatarUrl} className={classes.large} />\n      <FormControl>\n        <InputLabel>Avatar URL</InputLabel>\n        <Input value={avatarUrl} onChange={handleAvatarChange} />\n      </FormControl>\n      <FormControl>\n        <InputLabel>Email</InputLabel>\n        <Input value={email} error={email === ''} onChange={handleEmailChange} />\n      </FormControl>\n      <FormControl>\n        <InputLabel>User Name</InputLabel>\n        <Input value={userName} onChange={handleUserNamechange} />\n      </FormControl>\n      <FormControl>\n        <InputLabel>First Name</InputLabel>\n        <Input value={firstName} error={firstName === ''} onChange={handleFirstNameChange} />\n      </FormControl>\n      <FormControl>\n        <InputLabel>Last Name</InputLabel>\n        <Input value={lastName} error={lastName === ''} onChange={handleLastNameChange} />\n      </FormControl>\n      <FormControl>\n        <InputLabel>Bio</InputLabel>\n        <Input value={bio} onChange={handleBioChange} />\n      </FormControl>\n      <span>\n        <Button disabled={email === '' || firstName === '' || lastName ===''} onClick={() => props.updateAccountProp(props.token, userObj)} >Submit Changes</Button>\n        <a href='/'><Button><KeyboardBackspaceIcon /></Button></a>\n      </span>\n\n\n      <Button className={classes.delete} onClick={() => props.deleteAccountProp(props.token)}>Delete Profile</Button>\n\n    </Container>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useAsyncEffect from 'use-async-effect'\n\nimport Profile from './Profile'\nimport { userInfo, updateAccount, deleteAccount } from '../../store/loginInformaiton'\n\nexport default function ProfileContainer() {\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.authentication.token)\n\n  const deleteAccountProp = token => {\n    dispatch(deleteAccount(token))\n  }\n  const updateAccountProp =(token, userInfo) => {\n\n    dispatch(updateAccount(token, userInfo))\n  }\n  useAsyncEffect(() => {\n    dispatch(userInfo(token))\n  }, []);\n\n  const user = useSelector(state => state.user.user);\n  const props = {...user, token, updateAccountProp, deleteAccountProp};\n\n  if(!props.email) return (null)\n  return (\n    <>\n      <Profile props={props} />\n    </>\n  )\n}\n","\nexport const JOIN_CHANNEL = 'slack/submit/JOIN_CHANNEL';\n\nexport const loadChannel = (channel) => ({ type: JOIN_CHANNEL, channel });\n\nexport const joinChannel = (channel) => async dispatch => {\n  dispatch(loadChannel(channel))\n  // return {\n  //   type: JOIN_CHANNEL,\n  //   channel\n  // }\n}\n\nexport default function reducer (state = [], action) {\n  switch (action.type){\n    case JOIN_CHANNEL: {\n      return [...state, action.channel]\n    };\n    default: return state;\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport SplashContainer from './components/splash/SplashContainer';\nimport HomePageContainer from './components/home/HomePageContainer';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { loadToken } from './store/authentication';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ProfileContainer from './components/profile/ProfileContainer'\nimport { joinChannel } from './store/joinedChannels'\nimport SocketContext from './socketContext'\nimport { pushMessage } from './store/currentChat'\nimport { chatInfo } from './store/currentChat'\nimport useAsyncEffect from 'use-async-effect'\nimport './index.css'\n\nconst App = ({ socket }) => {\n  const token = useSelector(state => state.authentication.token);\n  const [loaded, setLoaded] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLoaded(true);\n    dispatch(loadToken());\n\n  }, []);\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //SOCKET FOR CHATS\n  const currentChannel = useSelector(state => state.chatMessages.chat);\n  const currentMessages = useSelector(state => state.chatMessages.messages)\n  const joinedChannels = useSelector(state => state.joinedChannels);\n  const chatState = useSelector(state => state.chatMessages)\n\n  useEffect(() => {\n    if (currentChannel) {\n      // console.log(`Joining ${currentChannel.id}`);\n      socket.emit('join', currentChannel.id);\n\n    }\n  },[currentChannel, socket]);\n\n  useEffect(() => {\n    if(!currentChannel) return;\n    if (joinedChannels.includes(currentChannel.id)) return;\n    console.log('joining channel --- whatever')\n    const chatType = currentChannel.ownerId ? 'channels' : 'groups'\n    socket.on(`channel${currentChannel.id}`, (newMessage) => {\n      // console.log('are you even listening')\n\n      dispatch(pushMessage(newMessage))\n    })\n    dispatch(joinChannel(currentChannel.id));\n},[currentChannel, dispatch, joinedChannels, socket])//add a listen for joined Channels\n  //SOCKET FOR CHATS\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  if (!loaded) return null;\n  return (\n  <BrowserRouter>\n    <SocketContext.Provider value={socket}>\n        <Switch>\n          <ProtectedRoute isLoggedIn={token} path='/' exact={ true } component={ HomePageContainer } />\n          <ProtectedRoute isLoggedIn={token} path='/profile' exact={ true } component={ ProfileContainer } />\n          <Route path='/*' exact={ true } component={ SplashContainer } />\n        </Switch>\n    </SocketContext.Provider>\n  </BrowserRouter>\n  )\n}\n\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport authentication from './authentication';\nimport user from './loginInformaiton';\nimport chatMessages from './currentChat';\n// import create from './create';\nimport joinedChannels from './joinedChannels'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducer = combineReducers({\n  // TODO: Add Reducers here\n  authentication,\n  user,\n  chatMessages,\n  joinedChannels,\n  // create,\n});\n\nconst configureStore = initialState => {\n  return createStore(\n    reducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk)),\n  );\n};\n\nexport default configureStore;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n    spacing: 4,\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\n//Socket.io\nimport { baseUrl } from \"./config/config\";\nimport { socketUrl } from './config/config'\nimport io from \"socket.io-client\";\n//Socket.io\nconst socket = io.connect(socketUrl);\n\nsocket.on('error', (error) => {\n  console.error(error);\n});\n//Socket.io\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App socket={socket}/>\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}